<?php
/**
 * @file
 * Install, update, and uninstall functions for the testimonial.
 */

/**
 * Implements hook_install().
 */
function testimonial_install() {
  $t = get_t();
  $name = 'testimonial';
  /*Define the node type*/
  $jobs = array(
    'type' => $name,
    'name' => $t('Testimonial Item'),
    'base' => 'node_content',
    'title_label' => $t('Testimonial Title'),
    'description' => $t('Testimonial post.'),
    'custom' => TRUE,
  );
  // Set other node defaults not declared above.
  $content_type = node_type_set_defaults($jobs);
  // Add the body field.
  node_add_body_field($content_type, $t('Testimonial Body'));
  // Check if current content type exsisting.
  $list = node_type_get_types();
  $list_type = array();
  foreach ($list as $item) {
    $list_type[] = $item->type;
  }
  if (!in_array('testimonial', $list_type)) {
    // Save the content type.
    node_type_save($content_type);
    // Adding Taxonomy Vocabulary.
    $vocabulary = array(
      'name' => 'Testimonial Categories',
      'machine_name' => 'testimonial_categories',
      'description' => '',
      'hierarchy' => 0,
      'module' => 'taxonomy',
      'weight' => 0,
      'description' => 'Catagories for Testimonial',
    );
    $vocabulary = (object) $vocabulary;
    taxonomy_vocabulary_save($vocabulary);

    // Create all the fields we are adding to our content type.
    foreach (testimonial_installed_fields() as $field) {
      field_create_field($field);
    }
    // Create all the instances for our fields.
    foreach (testimonial_installed_instances() as $instance) {
      $instance['entity_type'] = 'node';
      $instance['bundle'] = $jobs['type'];
      field_create_instance($instance);
    }
  }
}

/**
 * Returns a structured array defining the fields created by this content type.
 */
function testimonial_installed_fields() {
  $t = get_t();

  return array(
    'testimonial_category' => array(
      'active' => 1,
      'cardinality' => 6,
      'deleted' => 0,
      'entity_types' => array(),
      'field_name' => 'field_testimonial_category',
      'indexes' => array(
        'tid' => array(
          0 => 'tid',
        ),
      ),
      'locked' => 0,
      'module' => 'taxonomy',
      'settings' => array(
        'allowed_values' => array(
          0 => array(
            'vocabulary' => 'testimonial_categories',
            'parent' => 0,
          ),
        ),
      ),
      'translatable' => 0,
      'type' => 'taxonomy_term_reference',
    ),
    'testimonial_org_details' => array(
      'field_name' => 'testimonial_org_details',
      'label' => $t('Designation/Organisation'),
      'cardinality' => 1,
      'cardinality' => 1,
      'type' => 'text',
      'module' => 'text',
      'length' => '255',
    ),
    'testimonial_url' => array(
      'field_name' => 'testimonial_url',
      'label' => $t('Testimonial URL'),
      'cardinality' => 1,
      'cardinality' => 1,
      'type' => 'text',
      'module' => 'text',
      'length' => '255',
    ),
    'testimonial_author_image' => array(
      'field_name' => 'testimonial_author_image',
      'label' => $t('Testimonial Author Image'),
      'cardinality' => 1,
      'type' => 'image',
      'settings' => array(
        'default_image' => 0,
        'uri_scheme' => 'public',
      ),
    ),
  );
}

/**
 * Returns a structured array defining the instances for this content type.
 */
function testimonial_installed_instances() {
  $t = get_t();
  return array(
    'testimonial_category' => array(
      'bundle' => 'testimonial',
      'default_value' => NULL,
      'deleted' => 0,
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'taxonomy',
          'settings' => array(),
          'type' => 'taxonomy_term_reference_link',
          'weight' => 3,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'field_testimonial_category',
      'label' => 'Category',
      'required' => 0,
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'options',
        'settings' => array(),
        'type' => 'options_select',
        'weight' => -1,
      ),
    ),
    'testimonial_org_details' => array(
      'field_name' => 'testimonial_org_details',
      'label' => $t('Designation/Organisation'),
      'cardinality' => 1,
      'cardinality' => 1,
      'type' => 'text',
      'module' => 'text',
      'length' => '255',
    ),
    'testimonial_url' => array(
      'field_name' => 'testimonial_url',
      'label' => $t('Testimonial URL'),
      'cardinality' => 1,
      'cardinality' => 1,
      'type' => 'text',
      'module' => 'text',
      'length' => '255',
    ),
    'testimonial_author_image' => array(
      'field_name' => 'testimonial_author_image',
      'label' => $t('Testimonial Author Image'),
      'cardinality' => 1,
      'type' => 'image',
      'settings' => array(
        'default_image' => 0,
        'uri_scheme' => 'public',
      ),
    ),
  );
}

/**
 * Implements hook uninstall().
 */
function testimonial_uninstall() {

  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'testimonial'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // Delete all the nodes at once.
  node_delete_multiple($nids);

  // Purge all field information.
  field_purge_batch(1000);
}
